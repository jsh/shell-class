Here's a good problem:


  $ git clone git@git-server:myproject.git      # check out a mass of code
  $ cd myproject; make &> make.OUT &            # kick off a massive build
  $ cd /here; cd /there; cd /and-everywhere     # wander around doing other errands while it works 
  # Let's go look back to how the make is progressing
  $ cdjob %1
  $ tail -f make.OUT

Background jobs are great. What if I need more commands that know about them than the shell gives me out-of-the-box?

cdjob is this function:

  cdjob () 
  { 
    local d;
    : ${1:?"usage $FUNCNAME %N"};
    d=$(jobs $1 | perl -lane 'print "cd $1" if m/.*\(wd: (.*)\).*/');
    test "$d" && eval $d
  }
